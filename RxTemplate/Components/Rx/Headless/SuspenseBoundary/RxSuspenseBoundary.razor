@implements IComponentModel<ISuspendedComponent>

<div id="@(Model.Id)" >
    <input id="@(Model.StateKey)" type="hidden" /> 
    @if (!string.IsNullOrWhiteSpace(Model.InitialState)) {
        <script>
            razorx.metadata.set(
                @(Convert.ToInt32(Model.StateScope)),
                "@(Model.StateKey)",
                "@(Model.InitialState)"
            );
        </script>
    }
    <div 
        id="@(Model.Id)-suspense-boundary"
        hx-trigger="load" 
        hx-get="@(Model.RenderFromRoute)" 
        hx-swap="outerHTML transition:true" 
        hx-target="#@(Model.Id)"
        @attributes="@(AdditionalAttributes)">
        @(ChildContent)
    </div>
    <script>
        razorx.metadata.addToRequest(
            @(Convert.ToInt32(Model.StateScope)), 
            "@(Model.StateKey)",
            document.getElementById("@(Model.Id)-suspense-boundary"));
    </script>
</div>

@code {
    [Parameter(CaptureUnmatchedValues = true)] public IDictionary<string, object>? AdditionalAttributes { get; set; }
    [Parameter, EditorRequired] public ISuspendedComponent Model { get; set; } = null!;
    [Parameter] public RenderFragment? ChildContent { get; set; }
}