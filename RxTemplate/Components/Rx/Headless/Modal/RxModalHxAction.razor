<button
    id="@($"{ModalId}-{ActionId}")"
    @attributes="@(AdditionalAttributes)">
    @(ChildContent)
</button>
<script>
    (function() {
        var modal = document.getElementById("@(ModalId)");
        var action = document.getElementById("@($"{ModalId}-{ActionId}")");
        modal.addEventListener("opened", function(evt) {
            action.setAttribute("@(HxActionType)", `@(HxActionRoute.Trim().TrimEnd('/'))/${evt.detail.id}`);
            htmx.process(action);
        });
    })();
</script>

@code {
    private string ActionId = null!;
    [Parameter(CaptureUnmatchedValues = true)] public IDictionary<string, object>? AdditionalAttributes { get; set; }
    [Parameter, EditorRequired] public string ModalId { get; set; } = null!;
    [Parameter, EditorRequired] public string HxActionType { get; set; } = null!;
    [Parameter, EditorRequired] public string HxActionRoute { get; set; } = null!;
    [Parameter] public RenderFragment? ChildContent { get; set; }
    protected override void OnParametersSet() {
        if (!HxActionType.Equals("hx-get", StringComparison.InvariantCultureIgnoreCase)
        && !HxActionType.Equals("hx-post", StringComparison.InvariantCultureIgnoreCase)
        && !HxActionType.Equals("hx-put", StringComparison.InvariantCultureIgnoreCase)
        && !HxActionType.Equals("hx-patch", StringComparison.InvariantCultureIgnoreCase)
        && !HxActionType.Equals("hx-delete", StringComparison.InvariantCultureIgnoreCase)) {
            throw new ArgumentOutOfRangeException(nameof(HxActionType), $"{nameof(HxActionType)} must be hx-[get, post, put, patch, or delete]");
        }
        ActionId = Utilities.GenerateElementId();
    }
}