@implements IComponentModel<FormModel>

<form id="input-form" action="" hx-post="/examples/form/submit" hx-target="#form-page" hx-swap="outerHTML" novalidate> 
    <RxChangeValidator 
        Id="form-change-validator" 
        ValidationPostRoute="/examples/form/validate"
        IsDisabled="@(false)" 
        class="flex justify-center">
        <div class="flex flex-col w-full gap-y-3">
            <div class="flex max-md:flex-col gap-x-4">
                <div class="w-80">
                    <!-- Name Field -->
                    <div class="max-w-xs">
                        <Field 
                            Id="@(nameof(Model.Name))" 
                            PropertyName="@(nameof(Model.Name))" 
                            Value="@(Model.Name)" 
                            Label="Name" 
                            InputType="text"
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)"
                            placeholder="e.g. John Doe">
                        </Field>
                    </div>
                </div>
                <div class="w-80">
                    <!-- Email Field -->
                    <div class="max-w-xs">
                        <Field 
                            Id="@(nameof(Model.Email))"
                            PropertyName="@(nameof(Model.Email))" 
                            Value="@(Model.Email)" 
                            Label="Email" 
                            InputType="email"
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)"
                            placeholder="e.g. john.doe@email.com">
                        </Field>
                    </div>
                </div>
            </div>
            <div class="flex max-md:flex-col gap-x-4">
                <div class="w-80">
                    <!-- Birth Date Field -->
                    <div class="max-w-xs">
                        <Field 
                            Id="@(nameof(Model.BirthDate))"
                            PropertyName="@(nameof(Model.BirthDate))" 
                            Value="@(Model.BirthDate)" 
                            Label="Birth Date" 
                            InputType="date"
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)"
                            placeholder="e.g. 01/01/1970">
                        </Field>
                    </div>
                </div>
                <div class="w-80">
                    <!-- Appointment Time Field -->
                    <div class="max-w-xs">
                        <Field 
                            Id="@(nameof(Model.AppointmentTime))"
                            PropertyName="@(nameof(Model.AppointmentTime))" 
                            Value="@(Model.AppointmentTime)" 
                            Label="Appointment Time"
                            InputType="datetime-local" 
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)"
                            placeholder="e.g. 01/01/2026, 03:00 PM">
                        </Field>
                    </div>
                </div>
            </div>
            <div class="flex max-md:flex-col gap-x-4">
                <div class="w-80">
                    <!-- Number of Days Field -->
                    <div class="max-w-xs">
                        <Range
                            Id="@(nameof(Model.NumberOfDays))"
                            PropertyName="@(nameof(Model.NumberOfDays))" 
                            Value="@(Model.NumberOfDays ?? 0)" 
                            Label="Number of Days"
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)"
                            min="0"
                            max="10"
                            step="1">
                        </Range>
                    </div>
                </div>
                <div class="w-80">
                    <!-- Cost Field -->
                    <div class="max-w-xs">
                        <Field 
                            Id="@(nameof(Model.Cost))"
                            PropertyName="@(nameof(Model.Cost))" 
                            Value="@(Model.Cost)" 
                            Label="Cost" 
                            InputType="number"
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)"
                            placeholder="e.g. 60.00" 
                            min="0" 
                            step="10">
                        </Field>
                    </div>
                </div>
            </div>
            <div class="flex max-md:flex-col gap-x-4 md:items-center">
                <RadioSet 
                    Id="@(nameof(Model.Subscription))"
                    PropertyName="@(nameof(Model.Subscription))" 
                    Value="@(Model.Subscription.ToString())" 
                    Label="Subscription Type" 
                    Direction="@(RadioSet.DirectionType.Horizontal)"
                    UseOpacityForValidationErrors="@(true)"
                    AllowValidateOnChange="@(true)" 
                    EnumType="@(typeof(SubscriptionType))">
                </RadioSet>
            </div>
            <div class="flex max-md:flex-col gap-x-4 md:items-center">
                <div class="w-80">
                    <!-- Reporting Status Select -->
                    <div class="max-w-xs">
                        <Select 
                            Id="@(nameof(Model.ReportingStatus))"
                            PropertyName="@(nameof(Model.ReportingStatus))" 
                            Value="@(Model.ReportingStatus.ToString())" 
                            Label="Reporting Status" 
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)"
                            EnumType="@(typeof(ReportingStatusType))">
                        </Select>
                    </div>
                </div>
                <div class="w-80">
                    <!--  Is Published Toggle -->
                    <div class="max-w-xs pt-2">
                        <Checkbox 
                            Id="@(nameof(Model.IsPublished))"
                            PropertyName="@(nameof(Model.IsPublished))" 
                            IsChecked="@(Model.IsPublished)" 
                            Label="Is Published"
                            UseOpacityForValidationErrors="@(true)"
                            AllowValidateOnChange="@(true)">
                        </Checkbox>
                    </div>
                </div>
            </div>
            <div class="flex max-w-[650px]">
                <!-- Widget AutoComplete Field -->
                <div class="w-full">
                    <RxAutoCompleteOnSelected 
                        AutoCompleteId="@(nameof(Model.Widget))"
                        hx-post="/examples/form/widget"
                        hx-target="@($"#{nameof(Model.Widget)}")"
                        hx-swap="outerHTML transition:true">
                        <AutoComplete 
                            Id="@(nameof(Model.Widget))"
                            PropertyName="@(nameof(Model.Widget))" 
                            Value="@(Model.Widget)" 
                            SelectedIdProperty="@(nameof(Model.WidgetId))"
                            SelectedIdValue="@(Model.WidgetId)"
                            DelayMilliseconds="@(500)"
                            MinimumLengthToTrigger="@(4)"
                            ListMaxPixelHeight="@(250)"
                            GetListFromRoute="/examples/form/widgets"
                            Label="Select Widget (e.g., CNT, INV, RFQ, PO)"
                            PatternMatchClass="text-secondary" 
                            AllowValidateOnChange="@(true)"
                            UseOpacityForValidationErrors="@(true)"
                            placeholder="CNT-0, INV-0, RFQ-0, or PO-11 (minimum 4 characters required)">
                        </AutoComplete>
                    </RxAutoCompleteOnSelected>
                </div>
            </div>
            <div class="flex max-w-[650px]">
                <!-- Notes Memo Field -->
                <div class="w-full">
                    <MemoField 
                        Id="@(nameof(Model.Notes))"
                        PropertyName="@(nameof(Model.Notes))" 
                        Value="@(Model.Notes)" 
                        Label="Notes" 
                        MaxLength="1000" 
                        AllowValidateOnChange="@(true)"
                        UseOpacityForValidationErrors="@(true)"
                        placeholder="Enter notes">
                    </MemoField>
                </div>
            </div>
            <div class="mt-3">
                <!-- Submit Button -->
                <button id="form-submit" type="submit" class="btn btn-primary">
                    Submit
                </button>
            </div>
        </div>
    </RxChangeValidator>
</form>    

@code {
    [Parameter] public FormModel Model { get; set; } = new();
}